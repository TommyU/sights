---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by tommy.
--- DateTime: 2018/6/16 下午9:18
---
local _M = { client = nil, enable_pool = true }
_M.__index = _M

local mysql = require("resty.mysql")

function _M:connect()
    local db, err = mysql:new()
    if not db then
        local err_msg = "failed to instantiate mysql: " .. err
        ngx.log(ngx.ERR, err_msg)
        return false, err_msg
    end

    local ok, err, errno, sqlstate = db:connect {
        host = "127.0.0.1",
        port = 3306,
        database = "sights",
        user = "sights",
        password = "sights_pw",
        max_packet_size = 1024 * 1024
    }

    if not ok then
        local err_msg = "failed to connect: ", err, ": ", errno, " ", sqlstate
        ngx.log(ngx.ERR, err_msg)
        return false, err_msg
    end

    ngx.log(ngx.DEBUG, "connected to mysql.")
    db:set_timeout(1000) -- 1 sec
    self.client = db

    return true
end

function _M:close()
    if self.enable_pool then
        local ok, err = self.client:set_keepalive(10000, 100)
        if not ok then
            local err_msg = "failed to set keepalive: " .. err
            ngx.log(ngx.ERR, err_msg)
            return false, err_msg
        end
    else
        local ok, err = self.client:close()
        if not ok then
            local err_msg = "failed to close redis connection:  " .. err
            ngx.log(ngx.ERR, err_msg)
            return false, err_msg
        end
    end
    return true
end

function _M:query(sql)
    -- TODO: params must prevent sql-injection
    assert(self:connect())

    res, err, errno, sqlstate = self.client:query(sql)

    assert(self:close())

    ngx.log(ngx.DEBUG, "=====sql=" .. sql)
    if err then
        local err_msg ="bad result: " .. err ..  ": " .. errno .. ": " .. sqlstate ..  "."
        ngx.log(ngx.ERR, err_msg)
        return false, err_msg
    else
        return res
    end
end

return _M
