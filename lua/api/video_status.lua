---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by tommy.
--- DateTime: 2018/6/16 下午4:20
---
local constants = require("libs.constants")
local response = require("libs.response")
local video_utils = require("libs.video_utils")

local args = ngx.req.get_uri_args()

local keyword = args.keyword
local video_url = args.video_url
local video_name = args.video_name

-- decode
keyword = ngx.decode_base64(keyword)
video_url = ngx.decode_base64(video_url)
video_url = ngx.unescape_uri(video_url)
video_name = ngx.decode_base64(video_name)
ngx.log(ngx.DEBUG, '========' .. keyword .. '=====' .. video_name .. '=====' .. video_url)

if not keyword or not video_url or not video_name then
    response.json_response({ msg = "arg keyword/video_url/video_name" }, 400)
end


-- check status in redis
local redis_client = require("libs.redis")
local cjson = require("cjson")
local info = redis_client:get(constants:get_video_hash(video_url))
if info then
    local json_info = cjson.decode(info)
    if json_info.video_path then
        local short_video_uri = "/videos/" .. constants:get_video_hash(video_url) .. ".mp4"
        response.json_response({ status = constants.VIDEO_DOWNLOADED, video_uri = short_video_uri })
    else
        response.json_response({ status = constants.VIDEO_DOWNLOADING })
    end
else
    response.json_response({ status = constants.VIDEO_NOT_INITED }, 200, true)
    local delay_seconds = 0
    ngx.timer.at(delay_seconds, video_utils.download_from_youtube, video_url, keyword, video_name)
end
